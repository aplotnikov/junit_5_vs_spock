buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
    }
}

plugins {
    id 'java'
    id 'groovy'

    id 'project-report'
    id 'build-dashboard'

    id 'pmd'
    id 'findbugs'
    id 'checkstyle'
    id 'codenarc'
}

apply plugin: 'org.junit.platform.gradle.plugin'
apply from: 'config/static-code-analyze.gradle'

repositories {
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

jar {
    baseName = 'junit_5_vs_spock'
    group = 'io.github.aplotnikov'
    version = '0.0.1-SNAPSHOT'
}

ext.junitJupiterVersion = '5.2.0'
ext.junitVintageVersion = '5.2.0'

dependencies {
    compile 'io.vavr:vavr:0.9.2'

    testCompile 'nl.jqno.equalsverifier:equalsverifier:2.5.2'

    // Spock + Groovy dependency
    testCompile 'org.codehaus.groovy:groovy-all:2.5.2',
            'org.spockframework:spock-core:1.2-groovy-2.5'
    // Needs for launching Spock test into JUnit 5 platform
    testRuntime "org.junit.vintage:junit-vintage-engine:${junitVintageVersion}"

    // JUnit 5 dependency
    testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}",
            "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    // To avoid compiler warnings about @API annotations in JUnit code
    testCompileOnly 'org.apiguardian:apiguardian-api:1.0.0'

    // JUnit 5 utilities
    testCompile 'org.assertj:assertj-core:3.11.1',
            'org.awaitility:awaitility:3.1.2',
            'org.mockito:mockito-core:2.21.0',
            // add missing functionality into mockito - MockitoExtension
            'name.falgout.jeffrey.testing.junit5:mockito-extension:1.0.0'
}

junitPlatform {
    filters {
        tags {
//            Configuration of enabling and disabling tests by tag name
//            include 'fast', 'smoke'
//            exclude 'slow'
            exclude 'failed'
        }

        includeClassNamePatterns '.*Test', '.*Spec'
    }
}